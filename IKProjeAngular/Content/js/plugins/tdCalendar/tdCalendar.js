/* tdCalendar - Developed by Sina SALIK (2004 - 2016) */

!function (t) { var e = !0, n = new Object, d = function (a, r, i) { function c() { return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1) } function o(a) { var r; e && (p = "tdCalendar" + c, a.wrap("<div id='" + p + "'></div>"), a.parent("div").addClass("tdCalendar"), a.after("<div class='tdmonth'></div>")), a.next("div.tdmonth").append("<div class='tdconts'></div>"), a.next("div.tdmonth").children("div.tdconts").append("<a onclick='javascript:;' class='tdprev'><</a>"), a.next("div.tdmonth").children("div.tdconts").append("<div class='tdmonthname'></div>"), a.next("div.tdmonth").children("div.tdconts").append("<a onclick='javascript:;' class='tdnext'>></a>"), a.next("div.tdmonth").append("<div class='tdconts'><div class='tdday weekday'>P</div><div class='tdday weekday'>S</div><div class='tdday weekday'>Ç</div><div class='tdday weekday'>P</div><div class='tdday weekday'>C</div><div class='tdday weekday'>C</div><div class='tdday weekday'>P</div></div>"), a.next("div.tdmonth").children("div.tdconts").children("div.tdmonthname").text(l(x.Month)), a.next("div.tdmonth").attr("data-month", x.Month), a.parent("div").attr("data-year", x.Year); for (var i = 1, o = 0, s = 0, v = 1; w + y - 1 >= v; v++) y > v ? (a.next("div.tdmonth").append("<div class='tdday inactive'></div>"), s++) : (a.next("div.tdmonth").append("<div class='tdday' data-day='" + i.toString() + "'>" + i.toString() + "</div>"), i++), o++; if (r = 7 - o % 7, 7 != r) for (var v = 0; r > v; v++) a.next("div.tdmonth").append("<div class='tdday inactive'></div>"); a.next("div.tdmonth").append("<div class='tdconts'>" + x.Year + "</div>"), e && a.val(u(x.Day) + "." + u(x.Month) + "." + x.Year), n.Day = parseInt(a.val().split(".")[0]), n.Month = parseInt(a.val().split(".")[1]), n.Year = parseInt(a.val().split(".")[2]), x.Month == n.Month && x.Year == n.Year && a.next("div.tdmonth").children(".tdday[data-day='" + n.Day + "']").addClass("selected"), a.focus(function (t) { a.next("div.tdmonth").fadeIn("slow") }), a.keydown(function (t) { t.preventDefault() }), t("html").click(function (t) { if (void 0 != a.offset()) { var e = t.pageX, n = t.pageY, d = a.offset().left, r = a.offset().left + a.width(), i = a.offset().top, c = a.offset().top + a.height(); (d > e || i > n || e > r || n > c) && void 0 != a.next("div.tdmonth").offset() && (e = t.pageX, n = t.pageY, d = a.next("div.tdmonth").offset().left, r = a.next("div.tdmonth").offset().left + a.next("div.tdmonth").width(), i = a.next("div.tdmonth").offset().top, c = a.next("div.tdmonth").offset().top + a.next("div.tdmonth").height(), (d > e || i > n || e > r || n > c) && a.next("div.tdmonth").fadeOut("slow", function () { f(a) })) } }), a.next("div.tdmonth").children("div.tdconts").children(".tdnext").click(function () { prevMonth = parseInt(a.next("div.tdmonth").attr("data-month")), curYear = parseInt(a.parent("div").attr("data-year")); var t = new Object; t.Day = 1, 12 == prevMonth ? (t.Month = 1, t.Year = curYear + 1) : (t.Month = prevMonth + 1, t.Year = curYear), t.WeekDay = 7 - r + 1, a.next("div.tdmonth").html(""), new d(a, t, !1) }), a.next("div.tdmonth").children("div.tdconts").children(".tdprev").click(function () { nextMonth = parseInt(a.next("div.tdmonth").attr("data-month")), curYear = parseInt(a.parent("div").attr("data-year")); var t = new Object; t.Day = 1, 1 == nextMonth ? (t.Month = 12, t.Year = curYear - 1) : (t.Month = nextMonth - 1, t.Year = curYear), t.WeekDay = 8 - (h(t.Month, t.Year) - s) % 7, a.next("div.tdmonth").html(""), new d(a, t, !1) }), a.next("div.tdmonth").children(".tdday").click(function () { t(this).attr("data-day").length > 0 && (a.val(u(t(this).attr("data-day")) + "." + u(x.Month) + "." + x.Year), a.next("div").children(".tdday").removeClass("selected"), t(this).addClass("selected"), n.Day = parseInt(t(this).attr("data-day")), n.Month = x.Month, n.Year = x.Year, a.next("div.tdmonth").fadeOut("slow")) }) } function s(t) { return t % 4 == 1 ? 28 : 29 } function v(t) { var e = t.Day % 7; return (t.WeekDay + 7 - e + 1) % 7 } function h(t, e) { switch (t) { case 1: return 31; case 2: return s(e); case 3: return 31; case 4: return 30; case 5: return 31; case 6: return 30; case 7: return 31; case 8: return 31; case 9: return 30; case 10: return 31; case 11: return 30; case 12: return 31; default: return 30 } } function l(t) { switch (t) { case 1: return "Ocak"; case 2: return "Şubat"; case 3: return "Mart"; case 4: return "Nisan"; case 5: return "Mayıs"; case 6: return "Haziran"; case 7: return "Temmuz"; case 8: return "Ağustos"; case 9: return "Eylül"; case 10: return "Ekim"; case 11: return "Kasım"; case 12: return "Aralık"; default: return "" } } function u(t) { return 10 > t ? "0" + t : t } function f(t) { var e = parseInt(t.next("div.tdmonth").attr("data-month")), n = parseInt(t.parent("div").attr("data-year")), d = (t.val().split(".")[0], parseInt(t.val().split(".")[1])), a = parseInt(t.val().split(".")[2]); if (n > a) { do t.next("div.tdmonth").children(".tdconts").children(".tdprev").click(), e--, 0 == e && (e = 12, n--); while (n != a); if (e > d) do t.next("div.tdmonth").children(".tdconts").children(".tdprev").click(), e--; while (e != d) } else if (n == a) { if (e > d) { do t.next("div.tdmonth").children(".tdconts").children(".tdprev").click(), e--; while (e != d) } else if (d > e) do t.next("div.tdmonth").children(".tdconts").children(".tdnext").click(), e++; while (e != d) } else if (a > n) { do t.next("div.tdmonth").children(".tdconts").children(".tdnext").click(), e++, 13 == e && (e = 1, n++); while (n != a); if (d > e) do t.next("div.tdmonth").children(".tdconts").children(".tdnext").click(), e++; while (e != d) } } var p, c = c(), m = new Date, x = new Object; if (void 0 == r) { x.Day = m.getDate(), x.Month = m.getMonth() + 1, x.Year = m.getFullYear(), x.WeekDay = m.getDay(); var y = 0 == v(x) ? 7 : v(x), w = (s(x.Year), h(x.Month, x.Year)); e = !0 } else { x = r; var y = 0 == v(r) ? 7 : v(r), w = (s(r.Year), h(r.Month, r.Year)); e = !1 } o(a) }; t.fn.tdCalendar = function (t) { return new d(this, t) } }(jQuery);